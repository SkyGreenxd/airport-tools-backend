basePath: /api/v1
definitions:
  domain.Reason:
    enum:
    - MODEL_ERR
    - HUMAN_ERR
    type: string
    x-enum-varnames:
    - ModelError
    - HumanError
  domain.Role:
    enum:
    - Engineer
    - Quality Auditor
    type: string
    x-enum-comments:
      Engineer: Авиатехник / Инженер
      QualityAuditor: Специалист службы качества / аудит
    x-enum-descriptions:
    - Авиатехник / Инженер
    - Специалист службы качества / аудит
    x-enum-varnames:
    - Engineer
    - QualityAuditor
  domain.Status:
    enum:
    - OPEN
    - CLOSED
    - QA VERIFICATION
    - FAILED
    type: string
    x-enum-varnames:
    - OPEN
    - CLOSED
    - QA
    - FAILED
  v1.AddToolSetReq:
    properties:
      tool_set_name:
        type: string
      tools_ids:
        items:
          type: integer
        type: array
    type: object
  v1.AddToolSetRes:
    properties:
      id:
        type: integer
      name:
        type: string
      tools:
        items:
          $ref: '#/definitions/v1.ToolTypeDTO'
        type: array
    type: object
  v1.CheckReq:
    properties:
      data:
        type: string
      employee_id:
        type: string
      tool_set_id:
        type: integer
    required:
    - data
    - employee_id
    type: object
  v1.CheckRes:
    properties:
      access_tools:
        items:
          $ref: '#/definitions/v1.RecognizedToolDTO'
        type: array
      debug_image_url:
        type: string
      image_url:
        type: string
      problematic_tools:
        $ref: '#/definitions/v1.ProblematicTools'
      status:
        type: string
      transaction_type:
        type: string
    type: object
  v1.GetQAVerificationRes:
    properties:
      access_tools:
        items:
          $ref: '#/definitions/v1.RecognizedToolDTO'
        type: array
      created_at:
        type: string
      image_url:
        type: string
      problematic_tools:
        $ref: '#/definitions/v1.ProblematicTools'
      status:
        type: string
      tool_set_id:
        type: integer
      transaction_id:
        type: integer
      user:
        $ref: '#/definitions/v1.UserDto'
    type: object
  v1.GetRolesRes:
    properties:
      roles:
        items:
          $ref: '#/definitions/domain.Role'
        type: array
    type: object
  v1.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  v1.ListTransactionsRes:
    properties:
      transactions:
        items:
          $ref: '#/definitions/v1.TransactionDTO'
        type: array
    type: object
  v1.LoginReq:
    properties:
      employee_id:
        type: string
    required:
    - employee_id
    type: object
  v1.LoginRes:
    properties:
      role:
        $ref: '#/definitions/domain.Role'
    type: object
  v1.ProblematicTools:
    properties:
      manual_check_tools:
        items:
          $ref: '#/definitions/v1.RecognizedToolDTO'
        type: array
      missing_tools:
        items:
          $ref: '#/definitions/v1.ToolTypeDTO'
        type: array
      unknown_tools:
        items:
          $ref: '#/definitions/v1.RecognizedToolDTO'
        type: array
    type: object
  v1.RecognizedToolDTO:
    properties:
      bbox:
        items:
          type: number
        type: array
      confidence:
        type: number
      tool_type_id:
        type: integer
    type: object
  v1.RegisterReq:
    properties:
      employee_id:
        type: string
      full_name:
        type: string
      role:
        $ref: '#/definitions/domain.Role'
    required:
    - employee_id
    - full_name
    - role
    type: object
  v1.RegisterRes:
    properties:
      id:
        type: integer
    type: object
  v1.StatisticsRes:
    properties:
      data: {}
      type:
        type: string
    type: object
  v1.ToolTypeDTO:
    properties:
      id:
        type: integer
      name:
        type: string
      part_number:
        type: string
    type: object
  v1.TransactionDTO:
    properties:
      created_at:
        type: string
      id:
        type: integer
      status:
        $ref: '#/definitions/domain.Status'
      tool_set_id:
        type: integer
      user:
        $ref: '#/definitions/v1.UserDto'
    type: object
  v1.UserDto:
    properties:
      employee_id:
        type: string
      full_name:
        type: string
    type: object
  v1.VerificationReq:
    properties:
      notes:
        type: string
      qa_employee_id:
        type: string
      reason:
        $ref: '#/definitions/domain.Reason'
    required:
    - qa_employee_id
    - reason
    type: object
  v1.VerificationRes:
    properties:
      created_at:
        type: string
      status:
        type: string
      transaction_id:
        type: integer
      verified_by:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing airport tools
  termsOfService: http://swagger.io/terms/
  title: Airport Tools Vision API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Вход в систему по табельному номеру сотрудника.<br> После успешного
        входа пользователь перенаправляется:<br> • инженеру — на экран загрузки фотографии
        инструментов;<br> • QA — на экран проверки незавершённых транзакций.
      parameters:
      - description: Данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная авторизация
          schema:
            $ref: '#/definitions/v1.LoginRes'
        "400":
          description: Неверное тело запроса
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: Вход в систему
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: 'Регистрация сотрудника в системе.<br> Необходимые данные: табельный
        номер, ФИО и роль (например, "Инженер" или "QA").<br>'
      parameters:
      - description: Данные для регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.RegisterReq'
      produces:
      - application/json
      responses:
        "201":
          description: Регистрация успешна
          schema:
            $ref: '#/definitions/v1.RegisterRes'
        "400":
          description: Неверное тело запроса
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "409":
          description: Пользователь с таким табельным номером уже существует
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: Регистрация сотрудника в системе
      tags:
      - auth
  /api/v1/qa/statistics/errors:
    get:
      description: Возвращает статистику ошибок системы и QA. Поддерживает:<br/>-
        `error_type=MODEL_ERR` — список транзакций, где ошиблась ML-модель;<br/>-
        `error_type=HUMAN_ERR` — статистика ошибок QA-инженеров;<br/>- Без параметров
        — общее сравнение ML vs Human ошибок.
      parameters:
      - description: 'Тип ошибки: MODEL_ERR или HUMAN_ERR'
        in: query
        name: error_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/v1.StatisticsRes'
        "400":
          description: Неверные параметры
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: Получить статистику ошибок
      tags:
      - statistics
  /api/v1/qa/statistics/qa:
    get:
      description: Возвращает список QA-сотрудников или статистику конкретного QA-инженера.<br/>Поддерживает:<br/>-
        `employee_id` — статистика проверок конкретного QA-инженера;<br/>- Без параметров
        — список всех QA-сотрудников, выполняющих проверки.
      parameters:
      - description: Табельный номер QA-инженера
        in: query
        name: employee_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/v1.StatisticsRes'
        "400":
          description: Неверные параметры
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: Получить статистику QA
      tags:
      - statistics
  /api/v1/qa/statistics/transactions:
    get:
      description: Возвращает агрегированную статистику по всем транзакциям:<br/>-
        общее количество;<br/>- количество QA-транзакций;<br/>- количество открытых/закрытых
        транзакций;<br/>- количество неудачных транзакций.
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/v1.StatisticsRes'
        "400":
          description: Неверные параметры
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: Получить общую статистику транзакций
      tags:
      - statistics
  /api/v1/qa/statistics/users:
    get:
      description: Возвращает статистику по всем инженерам или конкретному сотруднику.
        Поддерживает:<br/>- `employee_id` — список транзакций конкретного пользователя
        (можно фильтровать по дате, лимиту транзакций, добавить среднее время работы);<br/>-
        `avg_work_duration=true` — среднее время работы каждого инженера;<br/>- `start_date/end_date`
        — начало и конец периода транзакций;<br/>- `limit` — кол-во транзакций на
        вывод;<br/>- Без параметров — список всех транзакций всех инженеров.
      parameters:
      - description: Табельный номер инженера
        in: query
        name: employee_id
        type: string
      - description: Начало периода (формат DD-MM-YYYY)
        in: query
        name: start_date
        type: string
      - description: Конец периода (формат DD-MM-YYYY)
        in: query
        name: end_date
        type: string
      - description: Максимальное количество записей для вывода
        in: query
        name: limit
        type: integer
      - description: true — получить среднее время работы каждого инженера
        in: query
        name: avg_work_duration
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/v1.StatisticsRes'
        "400":
          description: Неверные параметры
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: Получить статистику пользователей (инженеров)
      tags:
      - statistics
  /api/v1/qa/transactions/:
    get:
      consumes:
      - application/json
      description: 'Возвращает список транзакций QA.<br> Можно фильтровать по статусу
        с помощью query-параметра `status`.<br> Допустимое значение: ''qa'' вернёт
        только транзакции, требующие проверки QA.<br> Каждая транзакция содержит минимальные
        данные: ID, инженера, номер набора инструментов, дату создания транзакции,
        текущий статус.'
      parameters:
      - description: Фильтр по статусу транзакции
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список транзакций
          schema:
            $ref: '#/definitions/v1.ListTransactionsRes'
        "400":
          description: Неверное тело запроса
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: Список транзакций
      tags:
      - QA
  /api/v1/qa/transactions/:transaction_id:
    get:
      consumes:
      - application/json
      description: Получить информацию о проблемной транзакции.<br>Открывается экран
        сверки:<br><br> • Фотография инструментов (полноразмерное изображение)<br>
        • access_tools — инструменты, прошедшие автоматическую проверку<br> • Список
        проблемных инструментов с пояснениями, сгруппированных по категориям:<br>
        &nbsp;&nbsp;2) manual_check_tools — инструменты, требующие ручной проверки<br>
        &nbsp;&nbsp;3) unknown_tools — инструменты, не входящие в ожидаемый набор<br>
        &nbsp;&nbsp;4) missing_tools — инструменты, отсутствующие на фото, но ожидаемые<br><br>
      parameters:
      - description: Идентификатор транзакции
        in: path
        name: transaction_id
        required: true
        type: string
      - description: Данные о транзакции
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.GetQAVerificationRes'
      produces:
      - application/json
      responses:
        "200":
          description: Информация о транзакции
          schema:
            $ref: '#/definitions/v1.VerificationRes'
        "400":
          description: Неверное тело запроса
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "404":
          description: Транзакция не найдена
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: Получение информации о транзакции
      tags:
      - QA
  /api/v1/qa/transactions/:transaction_id/verification:
    post:
      consumes:
      - application/json
      description: После авторизации сотрудника QA выбирает из списка транзакцию.<br>Открывается
        экран сверки:<br><br> • Фотография инструментов (полноразмерное изображение)<br>
        • access_tools — инструменты, прошедшие автоматическую проверку<br> • Список
        проблемных инструментов с пояснениями, сгруппированных по категориям:<br>
        &nbsp;&nbsp;1) manual_check_tools — инструменты, требующие ручной проверки<br>
        &nbsp;&nbsp;2) unknown_tools — инструменты, не входящие в ожидаемый набор<br>
        &nbsp;&nbsp;3) missing_tools — инструменты, отсутствующие на фото, но ожидаемые<br><br>
      parameters:
      - description: Идентификатор транзакции
        in: path
        name: transaction_id
        required: true
        type: string
      - description: Данные завершения QA-проверки
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.VerificationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное закрытие транзакции
          schema:
            $ref: '#/definitions/v1.VerificationRes'
        "400":
          description: Неверное тело запроса
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "404":
          description: Транзакция не найдена
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: QA-проверка и завершение транзакции
      tags:
      - QA
  /api/v1/users/check:
    post:
      consumes:
      - application/json
      description: Принимает имя нового набора и список инструментов (их айди)
      parameters:
      - description: Запрос создание нового набора
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.AddToolSetReq'
      produces:
      - application/json
      responses:
        "200":
          description: Новый набор
          schema:
            $ref: '#/definitions/v1.AddToolSetRes'
        "400":
          description: Неверное тело запроса
          schema:
            $ref: '#/definitions/v1.HTTPError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: Создание нового набора инструментов
      tags:
      - tools
  /api/v1/users/roles:
    get:
      consumes:
      - application/json
      description: Возвращает список всех возможных ролей пользователей в системе.
      produces:
      - application/json
      responses:
        "200":
          description: Список ролей
          schema:
            items:
              $ref: '#/definitions/v1.GetRolesRes'
            type: array
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/v1.HTTPError'
      summary: Получить список ролей
      tags:
      - users
swagger: "2.0"
