// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Вход в систему по табельному номеру сотрудника.\u003cbr\u003e После успешного входа пользователь перенаправляется:\u003cbr\u003e • инженеру — на экран загрузки фотографии инструментов;\u003cbr\u003e • QA — на экран проверки незавершённых транзакций.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход в систему",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "schema": {
                            "$ref": "#/definitions/v1.LoginRes"
                        }
                    },
                    "400": {
                        "description": "Неверное тело запроса",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Регистрация сотрудника в системе.\u003cbr\u003e Необходимые данные: табельный номер, ФИО и роль (например, \"Инженер\" или \"QA\").\u003cbr\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация сотрудника в системе",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Регистрация успешна",
                        "schema": {
                            "$ref": "#/definitions/v1.RegisterRes"
                        }
                    },
                    "400": {
                        "description": "Неверное тело запроса",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Пользователь с таким табельным номером уже существует",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/qa/statistics": {
            "get": {
                "description": "Возвращает гибкую статистику по качеству проверок и ошибкам QA-системы. Поддерживает несколько режимов работы, задаваемых параметром ` + "`" + `type` + "`" + `.\u003cbr/\u003e**Типы статистики (` + "`" + `type` + "`" + `):\u003cbr/\u003e- ` + "`" + `users` + "`" + ` - Получить все транзакции инженеров.\u003cbr/\u003e- ` + "`" + `users\u0026employee_id=...` + "`" + ` — Список транзакций конкретного пользователя. Используйте ` + "`" + `start_date` + "`" + `, ` + "`" + `end_date` + "`" + ` и ` + "`" + `limit` + "`" + `, чтобы уточнить выборку.\u003cbr/\u003e- ` + "`" + `qa` + "`" + ` — список всех QA-сотрудников, выполняющих проверки.\u003cbr/\u003e- ` + "`" + `qa\u0026employee_id=...` + "`" + ` — статистика проверок, проведённых конкретным QA-инженером.\u003cbr/\u003e- ` + "`" + `errors` + "`" + ` - проверка транзакций по ошибкам, по умолчанию выводит MODEL_ERR vs HUMAN_ERR. Для фильтрации использовать ` + "`" + `error_type` + "`" + ` (MODEL_ERR/HUMAN_ERR).\u003cbr/\u003e- ` + "`" + `transactions` + "`" + ` — Выводит статистику по транзакциям (кол-во всех транзакций, а также кол-во открытых, закрытых, QA и неудачных)\u003cbr/\u003e- ` + "`" + `avg_work_duration` + "`" + ` - \"Получить среднее время работы каждого инженера по всем его транзакциям (Ставится значение true)\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Получить детализированную статистику QA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Тип статистики. Варианты: users, qs, errors, transactions",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Получить среднее время работы каждого инженера по всем его транзакциям (Ставится значение true, используется с users)",
                        "name": "avg_work_duration",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Табельный номер пользователя (для type=qa и для type=users)",
                        "name": "employee_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Начало периода (формат DD-MM-YYYY, используется с type=users\u0026employee_id=...)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Конец периода (формат DD-MM-YYYY, используется с type=users\u0026employee_id=...)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Максимальное количество записей в ответе (топ-N). По умолчанию — без ограничений (для type=users\u0026employee_id=...)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип ошибки: HUMAN_ERR или MODEL_ERR. Используется вместе с типом статистики ` + "`" + `errors` + "`" + `",
                        "name": "error_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ: структура зависит от значения параметра type",
                        "schema": {
                            "$ref": "#/definitions/v1.StatisticsRes"
                        }
                    },
                    "400": {
                        "description": "Неверное тело запроса",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/qa/transactions/": {
            "get": {
                "description": "Возвращает список транзакций QA.\u003cbr\u003e Можно фильтровать по статусу с помощью query-параметра ` + "`" + `status` + "`" + `.\u003cbr\u003e Допустимое значение: 'qa' вернёт только транзакции, требующие проверки QA.\u003cbr\u003e Каждая транзакция содержит минимальные данные: ID, инженера, номер набора инструментов, дату создания транзакции, текущий статус.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QA"
                ],
                "summary": "Список транзакций",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтр по статусу транзакции",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список транзакций",
                        "schema": {
                            "$ref": "#/definitions/v1.ListTransactionsRes"
                        }
                    },
                    "400": {
                        "description": "Неверное тело запроса",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/qa/transactions/:transaction_id": {
            "get": {
                "description": "Получить информацию о проблемной транзакции.\u003cbr\u003eОткрывается экран сверки:\u003cbr\u003e\u003cbr\u003e • Фотография инструментов (полноразмерное изображение)\u003cbr\u003e • access_tools — инструменты, прошедшие автоматическую проверку\u003cbr\u003e • Список проблемных инструментов с пояснениями, сгруппированных по категориям:\u003cbr\u003e \u0026nbsp;\u0026nbsp;2) manual_check_tools — инструменты, требующие ручной проверки\u003cbr\u003e \u0026nbsp;\u0026nbsp;3) unknown_tools — инструменты, не входящие в ожидаемый набор\u003cbr\u003e \u0026nbsp;\u0026nbsp;4) missing_tools — инструменты, отсутствующие на фото, но ожидаемые\u003cbr\u003e\u003cbr\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QA"
                ],
                "summary": "Получение информации о транзакции",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор транзакции",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные о транзакции",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.GetQAVerificationRes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о транзакции",
                        "schema": {
                            "$ref": "#/definitions/v1.VerificationRes"
                        }
                    },
                    "400": {
                        "description": "Неверное тело запроса",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Транзакция не найдена",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/qa/transactions/:transaction_id/verification": {
            "post": {
                "description": "После авторизации сотрудника QA выбирает из списка транзакцию.\u003cbr\u003eОткрывается экран сверки:\u003cbr\u003e\u003cbr\u003e • Фотография инструментов (полноразмерное изображение)\u003cbr\u003e • access_tools — инструменты, прошедшие автоматическую проверку\u003cbr\u003e • Список проблемных инструментов с пояснениями, сгруппированных по категориям:\u003cbr\u003e \u0026nbsp;\u0026nbsp;1) manual_check_tools — инструменты, требующие ручной проверки\u003cbr\u003e \u0026nbsp;\u0026nbsp;2) unknown_tools — инструменты, не входящие в ожидаемый набор\u003cbr\u003e \u0026nbsp;\u0026nbsp;3) missing_tools — инструменты, отсутствующие на фото, но ожидаемые\u003cbr\u003e\u003cbr\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QA"
                ],
                "summary": "QA-проверка и завершение транзакции",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор транзакции",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные завершения QA-проверки",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.VerificationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное закрытие транзакции",
                        "schema": {
                            "$ref": "#/definitions/v1.VerificationRes"
                        }
                    },
                    "400": {
                        "description": "Неверное тело запроса",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Транзакция не найдена",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/check": {
            "post": {
                "description": "Принимает табельный номер инженера и фотографию инструментов в формате base64.\u003cbr\u003e Сервис анализирует изображение, сопоставляет инструменты с ожидаемым набором и возвращает: \u003cbr\u003e\u003cbr\u003e• URL обработанного изображения \u003cbr\u003e• четыре массива: \u003cbr\u003e1) access_tools — инструменты, прошедшие автоматическую проверку\u003cbr\u003e1) manual_check_tools — инструменты, требующие ручной проверки \u003cbr\u003e2) unknown_tools — инструменты, отсутствующие в ожидаемом наборе \u003cbr\u003e3) missing_tools — инструменты, отсутствующие на фотографии, но ожидаемые\u003cbr\u003e• transaction_type - тип транзакции(Checkin - Сдача/Checkout - Выдача)\u003cbr\u003e• status - статус транзакции(OPEN - открыта, CLOSED - закрыта, QA VERIFICATION - QA проверка)\u003cbr\u003e\u003cbr\u003e Если 4 или более инструментов не попали в access_tools или за 3 попытки сканирования транзакция не закрылась, устанавливается флаг \"QA ПРОВЕРКА\" (QA VERIFICATION). \u003cbr\u003e\u003cbr\u003eЭндпоинт используется как для выдачи инструментов инженеру, так и для их последующей сдачи.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Операция выдачи/сдачи инструментов",
                "parameters": [
                    {
                        "description": "Запрос на выдачу или сдачу инструментов",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CheckReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная проверка",
                        "schema": {
                            "$ref": "#/definitions/v1.CheckRes"
                        }
                    },
                    "400": {
                        "description": "Неверное тело запроса",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/roles": {
            "get": {
                "description": "Возвращает список всех возможных ролей пользователей в системе.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получить список ролей",
                "responses": {
                    "200": {
                        "description": "Список ролей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.GetRolesRes"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Reason": {
            "type": "string",
            "enum": [
                "MODEL_ERR",
                "HUMAN_ERR"
            ],
            "x-enum-varnames": [
                "ModelError",
                "HumanError"
            ]
        },
        "domain.Role": {
            "type": "string",
            "enum": [
                "Engineer",
                "Quality Auditor"
            ],
            "x-enum-comments": {
                "Engineer": "Авиатехник / Инженер",
                "QualityAuditor": "Специалист службы качества / аудит"
            },
            "x-enum-descriptions": [
                "Авиатехник / Инженер",
                "Специалист службы качества / аудит"
            ],
            "x-enum-varnames": [
                "Engineer",
                "QualityAuditor"
            ]
        },
        "domain.Status": {
            "type": "string",
            "enum": [
                "OPEN",
                "CLOSED",
                "QA VERIFICATION",
                "FAILED"
            ],
            "x-enum-varnames": [
                "OPEN",
                "CLOSED",
                "QA",
                "FAILED"
            ]
        },
        "v1.CheckReq": {
            "type": "object",
            "required": [
                "data",
                "employee_id"
            ],
            "properties": {
                "data": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "tool_set_id": {
                    "type": "integer"
                }
            }
        },
        "v1.CheckRes": {
            "type": "object",
            "properties": {
                "access_tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.RecognizedToolDTO"
                    }
                },
                "debug_image_url": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "problematic_tools": {
                    "$ref": "#/definitions/v1.ProblematicTools"
                },
                "status": {
                    "type": "string"
                },
                "transaction_type": {
                    "type": "string"
                }
            }
        },
        "v1.GetQAVerificationRes": {
            "type": "object",
            "properties": {
                "access_tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.RecognizedToolDTO"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "problematic_tools": {
                    "$ref": "#/definitions/v1.ProblematicTools"
                },
                "status": {
                    "type": "string"
                },
                "tool_set_id": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/v1.UserDto"
                }
            }
        },
        "v1.GetRolesRes": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Role"
                    }
                }
            }
        },
        "v1.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "v1.ListTransactionsRes": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.TransactionDTO"
                    }
                }
            }
        },
        "v1.LoginReq": {
            "type": "object",
            "required": [
                "employee_id"
            ],
            "properties": {
                "employee_id": {
                    "type": "string"
                }
            }
        },
        "v1.LoginRes": {
            "type": "object",
            "properties": {
                "role": {
                    "$ref": "#/definitions/domain.Role"
                }
            }
        },
        "v1.ProblematicTools": {
            "type": "object",
            "properties": {
                "manual_check_tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.RecognizedToolDTO"
                    }
                },
                "missing_tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ToolTypeDTO"
                    }
                },
                "unknown_tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.RecognizedToolDTO"
                    }
                }
            }
        },
        "v1.RecognizedToolDTO": {
            "type": "object",
            "properties": {
                "bbox": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "confidence": {
                    "type": "number"
                },
                "tool_type_id": {
                    "type": "integer"
                }
            }
        },
        "v1.RegisterReq": {
            "type": "object",
            "required": [
                "employee_id",
                "full_name",
                "role"
            ],
            "properties": {
                "employee_id": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/domain.Role"
                }
            }
        },
        "v1.RegisterRes": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "v1.StatisticsRes": {
            "type": "object",
            "properties": {
                "data": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "v1.ToolTypeDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "part_number": {
                    "type": "string"
                }
            }
        },
        "v1.TransactionDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/domain.Status"
                },
                "tool_set_id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/v1.UserDto"
                }
            }
        },
        "v1.UserDto": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                }
            }
        },
        "v1.VerificationReq": {
            "type": "object",
            "required": [
                "qa_employee_id",
                "reason"
            ],
            "properties": {
                "notes": {
                    "type": "string"
                },
                "qa_employee_id": {
                    "type": "string"
                },
                "reason": {
                    "$ref": "#/definitions/domain.Reason"
                }
            }
        },
        "v1.VerificationRes": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "integer"
                },
                "verified_by": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Airport Tools Vision API",
	Description:      "API for managing airport tools",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
