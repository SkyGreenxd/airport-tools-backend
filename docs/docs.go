// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/transaction/checkin": {
            "post": {
                "description": "Receives the engineer's personnel number and a photo of the tools in base64 format, verifies them against the expected set,\u003cbr\u003eand returns image URL and four arrays:\u003cbr\u003e1) AccessTools - tools that passed automated checks\u003cbr\u003e2) ManualCheckTools - tools requiring manual verification\u003cbr\u003e3) UnknownTools - tools not in the expected set\u003cbr\u003e4) MissingTools - tools missing from the expected set\u003cbr\u003eIf not all tools are in AccessTools, a MANUAL VERIFICATION flag is set.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Instrument delivery operation",
                "parameters": [
                    {
                        "description": "Checkin request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CheckReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.CheckRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/checkout": {
            "post": {
                "description": "Receives the engineer's personnel number and a photo of the tools in base64 format,\u003cbr\u003everifies them against the expected set, and returns image URL and four arrays:\u003cbr\u003e1) AccessTools: tools that passed automated checks\u003cbr\u003e2) ManualCheckTools: tools requiring manual verification\u003cbr\u003e3) UnknownTools: tools not in the expected set\u003cbr\u003e4) MissingTools: tools missing from the expected set\u003cbr\u003eIf not all tools are in AccessTools, a MANUAL VERIFICATION flag is set.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Instrument issuance operation",
                "parameters": [
                    {
                        "description": "Checkout request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CheckReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.CheckRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "v1.CheckReq": {
            "type": "object",
            "required": [
                "data",
                "employee_id"
            ],
            "properties": {
                "data": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                }
            }
        },
        "v1.CheckRes": {
            "type": "object",
            "properties": {
                "access_tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.RecognizedToolDTO"
                    }
                },
                "debug_image_url": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "manual_check_tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.RecognizedToolDTO"
                    }
                },
                "missing_tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ToolTypeDTO"
                    }
                },
                "unknown_tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.RecognizedToolDTO"
                    }
                }
            }
        },
        "v1.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "v1.RecognizedToolDTO": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "tool_type_id": {
                    "type": "integer"
                }
            }
        },
        "v1.ToolTypeDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "part_number": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Airport Tools Vision API",
	Description:      "API for managing airport tools",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
