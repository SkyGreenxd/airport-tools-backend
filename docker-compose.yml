# Для полноценного запуска необходимо раскоммитить контейнеры
# и перенести docker-compose.yml в папку, где будут находиться
# все три репозитория: backend, compvis, frontend

services:
  db:
    image: pgvector/pgvector:pg17
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

#  ml:
#    build:
#      context: compvis
#      args:
#        TORCH_INDEX: "cpu"
#    container_name: ml_service
#    ports:
#      - "${ML_PORT}:${ML_PORT}"
#    env_file:
#      - .env
#    networks:
#      - app-net

#  frontend:
#    build:
#      context: frontend
#      args:
#        REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
#    container_name: frontend
#    env_file:
#      - .env
#    ports:
#      - "${FRONTEND_PORT}:80"
#    networks:
#      - app-net

  app:
    build:
      context: backend
    container_name: go_backend
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-net
    restart: unless-stopped

networks:
  app-net:
    driver: bridge

volumes:
  postgres_data:
  # minio_data:
