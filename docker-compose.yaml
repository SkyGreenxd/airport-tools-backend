services:
  db:
    image: pgvector/pgvector:pg17
    container_name: my_postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  ml:
    build: ../compvis
    container_name: ml_service
    ports:
      - "8000:8000"
    networks:
      - app-net

  frontend:
    build: ../frontend
    container_name: frontend
    ports:
      - "3000:80"
    networks:
      - app-net

  app:
    build: .
    container_name: my_go_server
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-net
    restart: unless-stopped

networks:
  app-net:
    driver: bridge

volumes:
  postgres_data: